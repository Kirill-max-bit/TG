from loguru import logger
from aiogram import F
from aiogram import types
from aiogram import Router
from aiogram.filters import CommandStart, Command, or_f
from aiogram.utils.formatting import as_list, as_marked_section, Bold
from filters.chat_types import ChatTypeFilter
from kbdn.reply import get_keyboard

user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private']))


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    logger.info(
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –∑–∞–ø—É—Å—Ç–∏–ª –∫–∏–Ω–æ-–±–æ—Ç–∞',
        message.from_user.full_name
    )

    welcome_text = as_list(
        Bold(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!"),
        "–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∏–Ω–æ-–±–æ—Ç üé¨",
        "–Ø –ø–æ–º–æ–≥—É:",
        as_marked_section(
            "‚Ä¢ –ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã –ø–æ –∂–∞–Ω—Ä—É/–≥–æ–¥—É/—Ä–µ–π—Ç–∏–Ω–≥—É",
            "‚Ä¢ –ü–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
            "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é —Ñ–∏–ª—å–º–æ–≤",
            marker="‚úÖ "
        )
    )

    await message.answer(**welcome_text.as_kwargs())

    await message.answer(
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_keyboard(
            "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤",
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
            "–ú–æ—è –∫–æ–ª–ª–µ–∫—Ü–∏—è",
            "–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤",
            placeholder="–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
            sizes=(2, 2)
        ),
    )


search_filter = or_f(
    Command("search"),
    (F.text.lower() == "–ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤")
)


@user_private_router.message(search_filter)
async def search_films(message: types.Message):
    await message.answer(
        "–ò—Å–∫–∞—Ç—å —Ñ–∏–ª—å–º—ã –ø–æ:",
        reply_markup=get_keyboard(
            "–ü–æ –∂–∞–Ω—Ä—É",
            "–ü–æ –≥–æ–¥—É",
            "–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É",
            "–ü–æ –∞–∫—Ç–µ—Ä–∞–º",
            "–ù–∞–∑–∞–¥",
            placeholder="–í—ã–±–µ—Ä–∏ –∫—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞",
            sizes=(2, 2, 1)
        ),
    )


@user_private_router.message(
    or_f(
        Command("recommend"),
        (F.text.lower() == "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    )
)
async def recommend_films(message: types.Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:",
        reply_markup=get_keyboard(
            "–ü–æ –ª—é–±–∏–º—ã–º –∂–∞–Ω—Ä–∞–º",
            "–ü–æ—Ö–æ–∂–∏–µ –Ω–∞...",
            "–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º",
            "–ù–∞–∑–∞–¥",
            placeholder="–ö–∞–∫ –∏—Å–∫–∞—Ç—å?",
            sizes=(2, 1, 1)
        ),
    )


collection_filter = or_f(
    Command("collection"),
    (F.text.lower() == "–º–æ—è –∫–æ–ª–ª–µ–∫—Ü–∏—è")
)


@user_private_router.message(collection_filter)
async def show_collection(message: types.Message):
    await message.answer(
        "–¢–≤–æ—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —Ñ–∏–ª—å–º–æ–≤:",
        reply_markup=get_keyboard(
            "–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
            "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º",
            "–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º",
            "–ù–∞–∑–∞–¥",
            placeholder="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π",
            sizes=(2, 1, 1)
        ),
    )


top_filter = or_f(
    Command("top"),
    (F.text.lower() == "—Ç–æ–ø —Ñ–∏–ª—å–º–æ–≤")
)


@user_private_router.message(top_filter)
async def show_top(message: types.Message):
    await message.answer(
        "–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ:",
        reply_markup=get_keyboard(
            "IMDb",
            "–ö–∏–Ω–æ–ø–æ–∏—Å–∫—É",
            "–û—Å–∫–∞—Ä 2024",
            "–ó–æ–ª–æ—Ç–∞—è –º–∞–ª–∏–Ω–∞",
            "–ù–∞–∑–∞–¥",
            placeholder="–í—ã–±–µ—Ä–∏ —Ä–µ–π—Ç–∏–Ω–≥",
            sizes=(2, 2, 1)
        ),
    )


@user_private_router.message(F.text.lower() == "–Ω–∞–∑–∞–¥")
async def back_handler(message: types.Message):
    await start_cmd(message)
