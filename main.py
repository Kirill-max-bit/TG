import os
import asyncio
from dotenv import load_dotenv
from loguru import logger
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from random import choice

load_dotenv()
TOKEN = os.getenv("TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")

MOVIES = [
    {
        "title": "–ö—Ä–µ—Å—Ç–Ω—ã–π –æ—Ç–µ—Ü",
        "year": 1972,
        "genre": "–ö—Ä–∏–º–∏–Ω–∞–ª, –î—Ä–∞–º–∞",
        "rating": 9.2
    },
    # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å–º—ã
]

SERIES = [
    {
        "title": "–ò–≥—Ä–∞ –ø—Ä–µ—Å—Ç–æ–ª–æ–≤",
        "year": 2011,
        "genre": "–§—ç–Ω—Ç–µ–∑–∏, –î—Ä–∞–º–∞",
        "seasons": 8
    },
    # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–∏–∞–ª—ã
]


async def send_recommendation(bot: Bot):
    while True:
        try:
            item = choice(MOVIES) if choice([True, False]) else choice(SERIES)

            if 'rating' in item:
                message = (
                    "üé¨ <b>–§–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:</b>\n"
                    f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {item['title']}\n"
                    f"<b>–ì–æ–¥:</b> {item['year']}\n"
                    f"<b>–ñ–∞–Ω—Ä:</b> {item['genre']}\n"
                    f"<b>–†–µ–π—Ç–∏–Ω–≥:</b> ‚≠ê {item['rating']}/10"
                )
            else:
                message = (
                    "üì∫ <b>–°–µ—Ä–∏–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:</b>\n"
                    f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {item['title']}\n"
                    f"<b>–ì–æ–¥:</b> {item['year']}\n"
                    f"<b>–ñ–∞–Ω—Ä:</b> {item['genre']}\n"
                    f"<b>–°–µ–∑–æ–Ω–æ–≤:</b> {item['seasons']}"
                )

            await bot.send_message(
                chat_id=CHANNEL_ID,
                text=message,
                parse_mode="HTML"
            )
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {item['title']}")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}")
            await asyncio.sleep(60)  # –ü–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

        await asyncio.sleep(3600)  # –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞—É–∑–∞


async def main():
    logger.add(
        "film_bot.log",
        format="{time:YYYY-MM-DD at HH:mm:ss} | {level} | {message}",
        rotation="1 week"
    )

    bot = Bot(token=TOKEN)
    dp = Dispatcher()

    @dp.message(Command("start"))
    async def start_handler(message: types.Message):
        await message.answer("–ë–æ—Ç –∫–∏–Ω–æ–ø–æ–∏—Å–∫–∞ –∑–∞–ø—É—â–µ–Ω!")

    task = asyncio.create_task(send_recommendation(bot))

    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
    finally:
        task.cancel()
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())
